1 简单工厂
	一个工厂F对应一个被管理对象的接口I，I一般定义一个共同的行为，如getResult()，I的实例I1 I2 I3 ……，工厂F定义getInstance 以一个switch结构 分别new对象；如果是单例，需要加上双检锁判断。
2 工厂方法
3 抽象工厂
	1的问题：增加一个I的实例，需要修改F中switch代码逻辑，增加一个分支；其次，如果要定义3个I2的实例，那需要重复代码3次，传入switch的标识
	2 3类似，把1中的F改为IF，然后I中的每一个实例对应一个自己的工厂，好处是 IF f = new IF2(); f.getInstance();  即增加I的新实例只需要新加个IFx；并且实例3个相同I2  只需要f.getInstance()3次。