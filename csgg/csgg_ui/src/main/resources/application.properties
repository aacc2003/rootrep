## dubbo springboot \u914D\u7F6E
##spring.dubbo.application.id=csgg-id
##spring.dubbo.application.name=csgg
##spring.dubbo.registry.address=zookeeper://127.0.0.1:2181
##spring.dubbo.registry.port=2181
##spring.dubbo.protocol.name=dubbo
##spring.dubbo.protocol.port=20880
##spring.dubbo.server=true

spring.application.name=csgg

#spring.dubbo.server=true
##spring.dubbo.registry=N/A
#spring.dubbo.protocol.port=20912
#spring.dubbo.registry.address=zookeeper://127.0.0.1:2181
##spring.dubbo.registry.port=2181
#spring.dubbo.registry.file=/var/log/webapp/dubbo


#server.context-path = /springboot-log   ???

##log
#self xml define
logging.config=classpath:logback.xml


xxxxx.ds.url=jdbc:mysql://192.168.45.85:3306/interpretation_stest?useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&&useSSL=false
xxxxx.ds.username=interpretation
xxxxx.ds.password=88601205


##sharding jdbc
spring.shardingsphere.datasource.names=testsharding_0,testsharding_1,testsharding_2
spring.shardingsphere.datasource.testsharding_1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.testsharding_1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.testsharding_1.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true
spring.shardingsphere.datasource.testsharding_1.username=root
spring.shardingsphere.datasource.testsharding_1.password=root

spring.shardingsphere.datasource.testsharding_2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.testsharding_2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.testsharding_2.url=jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true
spring.shardingsphere.datasource.testsharding_2.username=root
spring.shardingsphere.datasource.testsharding_2.password=root

## none (one pice) -- for t_user
spring.shardingsphere.datasource.testsharding_0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.testsharding_0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.testsharding_0.url=jdbc:mysql://127.0.0.1:3306/test3?useUnicode=true
spring.shardingsphere.datasource.testsharding_0.username=root
spring.shardingsphere.datasource.testsharding_0.password=root

## master slave   write read split
## ds0 can change to any
## ds0 is new datasource name for testsharding_0  , so when config node sharding rane, 
## for example change "actual-data-nodes" line  to "testsharding_$->{0}.t_user" -> "ds$->{0}.t_user",
## because ds0 is testsharding_0 and testsharding_s_0
## xxx=yyy    xxx can not repeat
## for business order , one problem : all query are executed in slave db 
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=testsharding_0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-name=testsharding_s_0

##db:node  db strategy
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.database-strategy.inline.algorithm-expression=testsharding_$->{user_id%2+1}

##table : node  
##sharding range
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=testsharding_$->{1..2}.t_order_$->{1..2}
    ## for t_user
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=testsharding_$->{0}.t_user

## master slave  write read split
# and "## spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=testsharding_$->{0}.t_user"
#spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds$->{0}.t_user

##primary key
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

##table:strategy
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id%2+1}
    ## for  t_user   none(one pice) 
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user

## common table
spring.shardingsphere.sharding.broadcast-tables=t_dict,t_area

##sharding log
spring.shardingshpere.props.sql.show=true

mybatis.configuration.map-underscore-to-camel-case=true


